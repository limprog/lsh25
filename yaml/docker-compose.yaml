version: '3.8' # Рекомендуемая версия Compose файла

services:
  # --- Сервис 1: MongoDB для пользователей ---
  mongodb-users:
    image: mongo:latest # Используем официальный образ MongoDB
    container_name: mongodb_users_db
    ports:
      # НЕ пробрасываем наружу 27017 для безопасности в продакшене.
      # Но если вам нужен доступ ИЗВНЕ для администрирования, можно временно раскомментировать:
      "27017:27017" # Внимание: НЕБЕЗОПАСНО для продакшена без ограничений!
    volumes:
      - mongodb_users_data:/data/db # Для сохранения данных базы
    networks:
      - app_network # Все контейнеры будут в одной сети

  # --- Сервис 2: MongoDB для заданий ---
  mongodb-tasks:
    image: mongo:latest
    container_name: mongodb_tasks_db
    ports:
      # Также НЕ пробрасываем наружу 27017 для безопасности
      "27018:27017" # Если очень нужен внешний доступ, используйте другой хост-порт
    volumes:
      - mongodb_tasks_data:/data/db
    networks:
      - app_network

  # --- Сервис 3: Python Server 1 ---
  python-server-1:
    build: ./python_server_1 # Указываем путь к папке с Dockerfile для этого сервиса
    container_name: python_server_1
    ports:
      - "8000:8000" # Пробрасываем порт 8000 хоста на порт 8000 контейнера
    environment:
      # Переменные окружения для подключения к MongoDB
      MONGO_USERS_URI: mongodb://mongodb-users:27017/users_db
      MONGO_TASKS_URI: mongodb://mongodb-tasks:27017/tasks_db
    depends_on:
      - mongodb-users # Зависимость от MongoDB для пользователей
      - mongodb-tasks # Зависимость от MongoDB для заданий
    networks:
      - app_network

  # --- Сервис 4: Python Server 2 ---
  python-server-2:
    build: ./python_server_2 # Указываем путь к папке с Dockerfile для этого сервиса
    container_name: python_server_2
    ports:
      - "8001:8001" # Пробрасываем порт 8001 хоста на порт 8001 контейнера
    environment:
      MONGO_USERS_URI: mongodb://mongodb-users:27017/users_db
      MONGO_TASKS_URI: mongodb://mongodb-tasks:27017/tasks_db
    depends_on:
      - mongodb-users
      - mongodb-tasks
    networks:
      - app_network

  # --- Сервис 5: Python Server 3 ---
  python-server-3:
    build: ./python_server_3 # Указываем путь к папке с Dockerfile для этого сервиса
    container_name: python_server_3
    ports:
      - "8002:8002" # Пробрасываем порт 8002 хоста на порт 8002 контейнера
    environment:
      MONGO_USERS_URI: mongodb://mongodb-users:27017/users_db
      MONGO_TASKS_URI: mongodb://mongodb-tasks:27017/tasks_db
    depends_on:
      - mongodb-users
      - mongodb-tasks
    networks:
      - app_network

  # --- Сервис 6: NGINX ---
  nginx:
    build: ./nginx # Путь к папке с Dockerfile для NGINX
    container_name: nginx_proxy
    ports:
      - "80:80"   # Стандартный HTTP порт
      - "443:443" # Стандартный HTTPS порт (если будете использовать SSL)
    depends_on:
      - python-server-1 # NGINX зависит от всех Python серверов, если он будет проксировать к ним запросы
      - python-server-2
      - python-server-3
    networks:
      - app_network

# --- Определение общих ресурсов ---
networks:
  app_network:
    driver: bridge # Создаем одну внутреннюю сеть для всех контейнеров

volumes:
  mongodb_users_data: # Именованный том для данных MongoDB пользователей
  mongodb_tasks_data: # Именованный том для данных MongoDB заданий